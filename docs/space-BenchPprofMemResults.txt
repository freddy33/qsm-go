Type: alloc_space
Time: Mar 23, 2019 at 8:31pm (IST)
Showing nodes accounting for 2926.13MB, 99.82% of 2931.34MB total
Dropped 30 nodes (cum <= 14.66MB)
      flat  flat%   sum%        cum   cum%
  530.34MB 18.09% 18.09%   530.34MB 18.09%  github.com/freddy33/qsm-go/m3space.MakeOutgrowthCollector
  491.53MB 16.77% 34.86%   491.53MB 16.77%  github.com/freddy33/qsm-go/m3space.makeConnection
  451.22MB 15.39% 50.25%   451.22MB 15.39%  sync.(*Pool).Put
  286.02MB  9.76% 60.01%   286.02MB  9.76%  github.com/freddy33/qsm-go/m3space.NewActiveNode
  264.01MB  9.01% 69.02%   264.01MB  9.01%  github.com/freddy33/qsm-go/m3space.(*ActiveNode).ConvertToSaved
  187.51MB  6.40% 75.41%   187.51MB  6.40%  github.com/freddy33/qsm-go/m3space.glob..func4
  142.20MB  4.85% 80.26%   142.20MB  4.85%  github.com/freddy33/qsm-go/m3space.(*OutgrowthCollectorSameEvent).addNewEoFromSingle
  121.51MB  4.15% 84.41%   121.51MB  4.15%  github.com/freddy33/qsm-go/m3space.glob..func5
  112.52MB  3.84% 88.25%   376.53MB 12.85%  github.com/freddy33/qsm-go/m3space.(*Space).moveOldToOldMaps
  110.57MB  3.77% 92.02%   412.86MB 14.08%  github.com/freddy33/qsm-go/m3space.(*Space).getOrCreateNode
      63MB  2.15% 94.17%       63MB  2.15%  github.com/freddy33/qsm-go/m3space.(*ActiveNode).AddOutgrowth
   30.51MB  1.04% 95.21%   549.05MB 18.73%  github.com/freddy33/qsm-go/m3space.(*Space).makeConnection
      27MB  0.92% 96.13%       27MB  0.92%  github.com/freddy33/qsm-go/m3space.(*ActiveNode).AddConnection
   24.51MB  0.84% 96.97%  1436.27MB 49.00%  github.com/freddy33/qsm-go/m3space.(*NewPossibleOutgrowth).realize
      18MB  0.61% 97.58%       18MB  0.61%  github.com/freddy33/qsm-go/m3space.(*EventOutgrowth).AddFrom
   17.54MB   0.6% 98.18%    17.54MB   0.6%  github.com/freddy33/qsm-go/m3space.(*OutgrowthCollectorMultiEvent).addNewEoFromSingle
   15.50MB  0.53% 98.71%   625.75MB 21.35%  github.com/freddy33/qsm-go/m3space.(*OutgrowthCollectorStatSameEvent).realizeSameEvent
   13.36MB  0.46% 99.17%   208.23MB  7.10%  github.com/freddy33/qsm-go/m3space.(*Event).moveNewOutgrowthsToLatest
    8.76MB   0.3% 99.46%    33.26MB  1.13%  github.com/freddy33/qsm-go/m3space.(*Space).getAndActivateNode
    7.50MB  0.26% 99.72%    24.50MB  0.84%  github.com/freddy33/qsm-go/m3space.(*SavedNode).ConvertToActive
       2MB 0.068% 99.79%  2739.62MB 93.46%  github.com/freddy33/qsm-go/m3space.(*Space).ForwardTime
       1MB 0.034% 99.82%   160.75MB  5.48%  github.com/freddy33/qsm-go/m3space.(*FullOutgrowthCollector).addNewEo
         0     0% 99.82%   187.51MB  6.40%  github.com/freddy33/qsm-go/m3space.(*Event).createNewPossibleOutgrowths
         0     0% 99.82%    38.48MB  1.31%  github.com/freddy33/qsm-go/m3space.(*OutgrowthCollectorStatMultiEvent).realizeMultiEvent
         0     0% 99.82%   787.54MB 26.87%  github.com/freddy33/qsm-go/m3space.(*OutgrowthCollectorStatSingle).realizeSingle
         0     0% 99.82%   691.08MB 23.58%  github.com/freddy33/qsm-go/m3space.(*Space).processNewOutgrowth
         0     0% 99.82%  1461.77MB 49.87%  github.com/freddy33/qsm-go/m3space.(*Space).realizeAllOutgrowth
         0     0% 99.82%   584.35MB 19.93%  github.com/freddy33/qsm-go/m3space.BenchmarkPack1
         0     0% 99.82%   334.75MB 11.42%  github.com/freddy33/qsm-go/m3space.BenchmarkPack12
         0     0% 99.82%   254.20MB  8.67%  github.com/freddy33/qsm-go/m3space.BenchmarkPack2
         0     0% 99.82%  1567.32MB 53.47%  github.com/freddy33/qsm-go/m3space.BenchmarkPack20
         0     0% 99.82%   121.51MB  4.15%  github.com/freddy33/qsm-go/m3space.MakeActiveOutgrowth
         0     0% 99.82%  2740.62MB 93.49%  github.com/freddy33/qsm-go/m3space.benchSpaceTest
         0     0% 99.82%   187.51MB  6.40%  github.com/freddy33/qsm-go/m3space.makeNewPossibleOutgrowth
         0     0% 99.82%  2740.62MB 93.49%  github.com/freddy33/qsm-go/m3space.runSpaceTest
         0     0% 99.82%   309.02MB 10.54%  sync.(*Pool).Get
         0     0% 99.82%   802.74MB 27.38%  testing.(*B).launch
         0     0% 99.82%  1937.88MB 66.11%  testing.(*B).run1.func1
         0     0% 99.82%  2741.14MB 93.51%  testing.(*B).runN

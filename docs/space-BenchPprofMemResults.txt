Type: alloc_space
Time: Apr 6, 2019 at 8:07pm (IDT)
Showing nodes accounting for 2520.72MB, 99.09% of 2543.76MB total
Dropped 14 nodes (cum <= 12.72MB)
      flat  flat%   sum%        cum   cum%
  463.80MB 18.23% 18.23%   463.80MB 18.23%  github.com/freddy33/qsm-go/m3space.MakeOutgrowthCollector
  402.02MB 15.80% 34.04%   402.02MB 15.80%  github.com/freddy33/qsm-go/m3space.makeConnection
  388.29MB 15.26% 49.30%   388.29MB 15.26%  sync.(*Pool).Put
  234.02MB  9.20% 58.50%   234.02MB  9.20%  github.com/freddy33/qsm-go/m3space.NewActiveNode
  232.01MB  9.12% 67.62%   232.01MB  9.12%  github.com/freddy33/qsm-go/m3space.(*ActiveNode).ConvertToSaved
  154.01MB  6.05% 73.68%   154.01MB  6.05%  github.com/freddy33/qsm-go/m3space.glob..func4
  137.56MB  5.41% 79.08%   137.56MB  5.41%  github.com/freddy33/qsm-go/m3space.(*OutgrowthCollectorSameEvent).addNewEoFromSingle
   94.52MB  3.72% 82.80%   326.53MB 12.84%  github.com/freddy33/qsm-go/m3space.(*Space).moveOldToOldMaps
   83.39MB  3.28% 86.08%   323.74MB 12.73%  github.com/freddy33/qsm-go/m3space.(*Space).getOrCreateNode
   83.01MB  3.26% 89.34%    83.01MB  3.26%  github.com/freddy33/qsm-go/m3space.glob..func5
   54.50MB  2.14% 91.48%    54.50MB  2.14%  github.com/freddy33/qsm-go/m3space.(*ActiveNode).AddOutgrowth
      47MB  1.85% 93.33%   208.51MB  8.20%  github.com/freddy33/qsm-go/m3space.(*Event).createNewPossibleOutgrowthsForLatestOutgrowth
   25.52MB  1.00% 94.34%   449.05MB 17.65%  github.com/freddy33/qsm-go/m3space.(*Space).makeConnection
   25.51MB  1.00% 95.34%    25.51MB  1.00%  runtime.malg
   21.50MB  0.85% 96.18%    21.50MB  0.85%  github.com/freddy33/qsm-go/m3space.(*ActiveNode).AddConnection
      17MB  0.67% 96.85%       17MB  0.67%  github.com/freddy33/qsm-go/m3space.(*EventOutgrowth).AddFrom
   16.50MB  0.65% 97.50%   485.65MB 19.09%  github.com/freddy33/qsm-go/m3space.(*OutgrowthCollectorStatSameEvent).realizeSameEvent
   15.83MB  0.62% 98.12%   202.16MB  7.95%  github.com/freddy33/qsm-go/m3space.(*Event).moveNewOutgrowthsToLatest
   12.88MB  0.51% 98.63%  1135.14MB 44.62%  github.com/freddy33/qsm-go/m3space.(*NewPossibleOutgrowth).realize
    5.50MB  0.22% 98.85%   153.57MB  6.04%  github.com/freddy33/qsm-go/m3space.(*FullOutgrowthCollector).addNewEo
    3.50MB  0.14% 98.98%    13.50MB  0.53%  github.com/freddy33/qsm-go/m3space.(*SavedNode).ConvertToActive
    2.83MB  0.11% 99.09%    16.34MB  0.64%  github.com/freddy33/qsm-go/m3space.(*Space).getAndActivateNode
         0     0% 99.09%    21.32MB  0.84%  github.com/freddy33/qsm-go/m3space.(*OutgrowthCollectorStatMultiEvent).realizeMultiEvent
         0     0% 99.09%   644.67MB 25.34%  github.com/freddy33/qsm-go/m3space.(*OutgrowthCollectorStatSingle).realizeSingle
         0     0% 99.09%  2305.20MB 90.62%  github.com/freddy33/qsm-go/m3space.(*Space).ForwardTime
         0     0% 99.09%   617.37MB 24.27%  github.com/freddy33/qsm-go/m3space.(*Space).processNewOutgrowth
         0     0% 99.09%  1159.14MB 45.57%  github.com/freddy33/qsm-go/m3space.(*Space).realizeAllOutgrowth
         0     0% 99.09%   199.69MB  7.85%  github.com/freddy33/qsm-go/m3space.BenchmarkPack1
         0     0% 99.09%   330.19MB 12.98%  github.com/freddy33/qsm-go/m3space.BenchmarkPack12
         0     0% 99.09%   239.21MB  9.40%  github.com/freddy33/qsm-go/m3space.BenchmarkPack2
         0     0% 99.09%  1536.12MB 60.39%  github.com/freddy33/qsm-go/m3space.BenchmarkPack20
         0     0% 99.09%    83.01MB  3.26%  github.com/freddy33/qsm-go/m3space.MakeActiveOutgrowth
         0     0% 99.09%  2305.20MB 90.62%  github.com/freddy33/qsm-go/m3space.benchSpaceTest
         0     0% 99.09%   161.51MB  6.35%  github.com/freddy33/qsm-go/m3space.makeNewPossibleOutgrowth
         0     0% 99.09%  2305.20MB 90.62%  github.com/freddy33/qsm-go/m3space.runSpaceTest
         0     0% 99.09%    26.99MB  1.06%  runtime.mstart
         0     0% 99.09%    26.99MB  1.06%  runtime.newproc.func1
         0     0% 99.09%    26.99MB  1.06%  runtime.newproc1
         0     0% 99.09%    26.99MB  1.06%  runtime.systemstack
         0     0% 99.09%   244.52MB  9.61%  sync.(*Pool).Get
         0     0% 99.09%   404.25MB 15.89%  testing.(*B).launch
         0     0% 99.09%  1900.96MB 74.73%  testing.(*B).run1.func1
         0     0% 99.09%  2305.20MB 90.62%  testing.(*B).runN

Type: alloc_space
Time: Apr 20, 2019 at 10:05am (IDT)
Showing nodes accounting for 2593.86MB, 99.18% of 2615.28MB total
Dropped 29 nodes (cum <= 13.08MB)
      flat  flat%   sum%        cum   cum%
  476.25MB 18.21% 18.21%   476.25MB 18.21%  github.com/freddy33/qsm-go/m3space.MakeOutgrowthCollector
  422.03MB 16.14% 34.35%   422.03MB 16.14%  github.com/freddy33/qsm-go/m3space.makeConnection
  407.32MB 15.57% 49.92%   407.83MB 15.59%  sync.(*Pool).Put
  269.52MB 10.31% 60.23%   269.52MB 10.31%  github.com/freddy33/qsm-go/m3space.NewActiveNode
  206.01MB  7.88% 68.11%   206.01MB  7.88%  github.com/freddy33/qsm-go/m3space.(*ActiveNode).ConvertToSaved
  171.01MB  6.54% 74.64%   171.01MB  6.54%  github.com/freddy33/qsm-go/m3space.glob..func4
  133.88MB  5.12% 79.76%   133.88MB  5.12%  github.com/freddy33/qsm-go/m3space.(*OutgrowthCollectorSameEvent).addNewEoFromSingle
   94.97MB  3.63% 83.39%   300.99MB 11.51%  github.com/freddy33/qsm-go/m3space.(*Space).moveOldToOldMaps
   87.01MB  3.33% 86.72%    87.01MB  3.33%  github.com/freddy33/qsm-go/m3space.glob..func5
   74.08MB  2.83% 89.55%   351.61MB 13.44%  github.com/freddy33/qsm-go/m3space.(*Space).getOrCreateNode
      55MB  2.10% 91.66%       55MB  2.10%  github.com/freddy33/qsm-go/m3space.(*ActiveNode).AddOutgrowth
      52MB  1.99% 93.65%   224.02MB  8.57%  github.com/freddy33/qsm-go/m3space.(*Event).createNewPossibleOutgrowthsForLatestOutgrowth
   28.08MB  1.07% 94.72%   473.60MB 18.11%  github.com/freddy33/qsm-go/m3space.(*Space).makeConnection
   23.50MB   0.9% 95.62%    23.50MB   0.9%  github.com/freddy33/qsm-go/m3space.(*ActiveNode).AddConnection
   19.37MB  0.74% 96.36%   210.85MB  8.06%  github.com/freddy33/qsm-go/m3space.(*Event).moveNewOutgrowthsToLatest
   18.26MB   0.7% 97.06%  1209.32MB 46.24%  github.com/freddy33/qsm-go/m3space.(*NewPossibleOutgrowth).realize
   16.50MB  0.63% 97.69%   526.16MB 20.12%  github.com/freddy33/qsm-go/m3space.(*OutgrowthCollectorStatSameEvent).realizeSameEvent
   15.01MB  0.57% 98.26%    15.01MB  0.57%  runtime.malg
   13.54MB  0.52% 98.78%    13.54MB  0.52%  github.com/freddy33/qsm-go/m3space.(*OutgrowthCollectorMultiEvent).addNewEoFromSingle
    6.01MB  0.23% 99.01%    22.01MB  0.84%  github.com/freddy33/qsm-go/m3space.(*Space).getAndActivateNode
    2.01MB 0.077% 99.09%   149.43MB  5.71%  github.com/freddy33/qsm-go/m3space.(*FullOutgrowthCollector).addNewEo
       2MB 0.076% 99.16%       16MB  0.61%  github.com/freddy33/qsm-go/m3space.(*SavedNode).ConvertToActive
    0.50MB 0.019% 99.18%  2369.34MB 90.60%  github.com/freddy33/qsm-go/m3space.(*Space).ForwardTime
         0     0% 99.18%    18.67MB  0.71%  github.com/freddy33/qsm-go/m3space.(*OutgrowthCollectorStatMultiEvent).realizeMultiEvent
         0     0% 99.18%   680.99MB 26.04%  github.com/freddy33/qsm-go/m3space.(*OutgrowthCollectorStatSingle).realizeSingle
         0     0% 99.18%   625.69MB 23.92%  github.com/freddy33/qsm-go/m3space.(*Space).processNewOutgrowth
         0     0% 99.18%  1231.32MB 47.08%  github.com/freddy33/qsm-go/m3space.(*Space).realizeAllOutgrowth
         0     0% 99.18%   200.99MB  7.69%  github.com/freddy33/qsm-go/m3space.BenchmarkPack1
         0     0% 99.18%   336.98MB 12.89%  github.com/freddy33/qsm-go/m3space.BenchmarkPack12
         0     0% 99.18%   249.75MB  9.55%  github.com/freddy33/qsm-go/m3space.BenchmarkPack2
         0     0% 99.18%  1582.12MB 60.50%  github.com/freddy33/qsm-go/m3space.BenchmarkPack20
         0     0% 99.18%    87.51MB  3.35%  github.com/freddy33/qsm-go/m3space.MakeActiveOutgrowth
         0     0% 99.18%  2369.84MB 90.62%  github.com/freddy33/qsm-go/m3space.benchSpaceTest
         0     0% 99.18%   172.01MB  6.58%  github.com/freddy33/qsm-go/m3space.makeNewPossibleOutgrowth
         0     0% 99.18%  2369.84MB 90.62%  github.com/freddy33/qsm-go/m3space.runSpaceTest
         0     0% 99.18%    18.18MB   0.7%  runtime.mstart
         0     0% 99.18%    18.18MB   0.7%  runtime.newproc.func1
         0     0% 99.18%    18.18MB   0.7%  runtime.newproc1
         0     0% 99.18%    18.18MB   0.7%  runtime.systemstack
         0     0% 99.18%   259.52MB  9.92%  sync.(*Pool).Get
         0     0% 99.18%   406.42MB 15.54%  testing.(*B).launch
         0     0% 99.18%  1963.42MB 75.08%  testing.(*B).run1.func1
         0     0% 99.18%  2369.84MB 90.62%  testing.(*B).runN

Type: alloc_space
Time: Apr 13, 2019 at 8:23pm (IDT)
Showing nodes accounting for 2507.97MB, 99.07% of 2531.51MB total
Dropped 23 nodes (cum <= 12.66MB)
      flat  flat%   sum%        cum   cum%
  460.84MB 18.20% 18.20%   460.84MB 18.20%  github.com/freddy33/qsm-go/m3space.MakeOutgrowthCollector
  406.49MB 16.06% 34.26%   406.99MB 16.08%  sync.(*Pool).Put
  403.52MB 15.94% 50.20%   403.52MB 15.94%  github.com/freddy33/qsm-go/m3space.makeConnection
  252.52MB  9.98% 60.18%   252.52MB  9.98%  github.com/freddy33/qsm-go/m3space.NewActiveNode
  211.51MB  8.36% 68.53%   211.51MB  8.36%  github.com/freddy33/qsm-go/m3space.(*ActiveNode).ConvertToSaved
  153.51MB  6.06% 74.60%   153.51MB  6.06%  github.com/freddy33/qsm-go/m3space.glob..func4
  122.02MB  4.82% 79.42%   122.02MB  4.82%  github.com/freddy33/qsm-go/m3space.(*OutgrowthCollectorSameEvent).addNewEoFromSingle
   99.74MB  3.94% 83.36%   311.25MB 12.30%  github.com/freddy33/qsm-go/m3space.(*Space).moveOldToOldMaps
   89.51MB  3.54% 86.89%    89.51MB  3.54%  github.com/freddy33/qsm-go/m3space.glob..func5
   84.89MB  3.35% 90.24%   341.57MB 13.49%  github.com/freddy33/qsm-go/m3space.(*Space).getOrCreateNode
      49MB  1.94% 92.18%   207.01MB  8.18%  github.com/freddy33/qsm-go/m3space.(*Event).createNewPossibleOutgrowthsForLatestOutgrowth
   46.50MB  1.84% 94.02%    46.50MB  1.84%  github.com/freddy33/qsm-go/m3space.(*ActiveNode).AddOutgrowth
   20.71MB  0.82% 94.84%   444.73MB 17.57%  github.com/freddy33/qsm-go/m3space.(*Space).makeConnection
   20.51MB  0.81% 95.65%    20.51MB  0.81%  runtime.malg
   20.50MB  0.81% 96.46%    20.50MB  0.81%  github.com/freddy33/qsm-go/m3space.(*ActiveNode).AddConnection
   19.90MB  0.79% 97.24%  1168.28MB 46.15%  github.com/freddy33/qsm-go/m3space.(*NewPossibleOutgrowth).realize
   14.53MB  0.57% 97.82%    14.53MB  0.57%  github.com/freddy33/qsm-go/m3space.(*OutgrowthCollectorMultiEvent).addNewEoFromSingle
   14.50MB  0.57% 98.39%   512.30MB 20.24%  github.com/freddy33/qsm-go/m3space.(*OutgrowthCollectorStatSameEvent).realizeSameEvent
   10.61MB  0.42% 98.81%   198.03MB  7.82%  github.com/freddy33/qsm-go/m3space.(*Event).moveNewOutgrowthsToLatest
    2.66MB   0.1% 98.91%    19.66MB  0.78%  github.com/freddy33/qsm-go/m3space.(*Space).getAndActivateNode
       2MB 0.079% 98.99%   139.05MB  5.49%  github.com/freddy33/qsm-go/m3space.(*FullOutgrowthCollector).addNewEo
    1.50MB 0.059% 99.05%       17MB  0.67%  github.com/freddy33/qsm-go/m3space.(*SavedNode).ConvertToActive
    0.50MB  0.02% 99.07%  2297.95MB 90.77%  github.com/freddy33/qsm-go/m3space.(*Space).ForwardTime
         0     0% 99.07%    22.83MB   0.9%  github.com/freddy33/qsm-go/m3space.(*OutgrowthCollectorStatMultiEvent).realizeMultiEvent
         0     0% 99.07%   647.64MB 25.58%  github.com/freddy33/qsm-go/m3space.(*OutgrowthCollectorStatSingle).realizeSingle
         0     0% 99.07%   599.89MB 23.70%  github.com/freddy33/qsm-go/m3space.(*Space).processNewOutgrowth
         0     0% 99.07%  1188.28MB 46.94%  github.com/freddy33/qsm-go/m3space.(*Space).realizeAllOutgrowth
         0     0% 99.07%   199.33MB  7.87%  github.com/freddy33/qsm-go/m3space.BenchmarkPack1
         0     0% 99.07%   348.02MB 13.75%  github.com/freddy33/qsm-go/m3space.BenchmarkPack12
         0     0% 99.07%   226.51MB  8.95%  github.com/freddy33/qsm-go/m3space.BenchmarkPack2
         0     0% 99.07%  1524.08MB 60.20%  github.com/freddy33/qsm-go/m3space.BenchmarkPack20
         0     0% 99.07%    90.01MB  3.56%  github.com/freddy33/qsm-go/m3space.MakeActiveOutgrowth
         0     0% 99.07%  2297.95MB 90.77%  github.com/freddy33/qsm-go/m3space.benchSpaceTest
         0     0% 99.07%   158.51MB  6.26%  github.com/freddy33/qsm-go/m3space.makeNewPossibleOutgrowth
         0     0% 99.07%  2297.95MB 90.77%  github.com/freddy33/qsm-go/m3space.runSpaceTest
         0     0% 99.07%    22.89MB   0.9%  runtime.mstart
         0     0% 99.07%    22.89MB   0.9%  runtime.newproc.func1
         0     0% 99.07%    22.89MB   0.9%  runtime.newproc1
         0     0% 99.07%    22.89MB   0.9%  runtime.systemstack
         0     0% 99.07%   248.52MB  9.82%  sync.(*Pool).Get
         0     0% 99.07%   389.01MB 15.37%  testing.(*B).launch
         0     0% 99.07%  1908.94MB 75.41%  testing.(*B).run1.func1
         0     0% 99.07%  2297.95MB 90.77%  testing.(*B).runN

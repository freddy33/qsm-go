Type: cpu
Time: Apr 13, 2019 at 8:22pm (IDT)
Duration: 27.37s, Total samples = 63.24s (231.02%)
Showing nodes accounting for 57.07s, 90.24% of 63.24s total
Dropped 234 nodes (cum <= 0.32s)
      flat  flat%   sum%        cum   cum%
    26.59s 42.05% 42.05%     26.64s 42.13%  runtime.usleep
     4.56s  7.21% 49.26%      4.56s  7.21%  runtime.pthread_cond_signal
     3.60s  5.69% 54.95%      5.36s  8.48%  runtime.mapaccess2
     2.43s  3.84% 58.79%      2.45s  3.87%  runtime.pthread_cond_wait
     1.70s  2.69% 61.48%      1.73s  2.74%  github.com/freddy33/qsm-go/m3space.(*SavedNode).IsOld
     1.54s  2.44% 63.92%      2.88s  4.55%  runtime.scanobject
     1.31s  2.07% 65.99%     14.40s 22.77%  github.com/freddy33/qsm-go/m3space.(*Event).createNewPossibleOutgrowthsForLatestOutgrowth
     1.15s  1.82% 67.81%      1.15s  1.82%  github.com/freddy33/qsm-go/m3space.(*SavedNode).IsDead
     1.09s  1.72% 69.53%      1.09s  1.72%  runtime.memclrNoHeapPointers
     0.93s  1.47% 71.00%      0.93s  1.47%  runtime.pthread_mutex_lock
     0.84s  1.33% 72.33%      0.84s  1.33%  runtime.aeshashbody
     0.77s  1.22% 73.55%      0.77s  1.22%  runtime.memmove
     0.64s  1.01% 74.56%      0.64s  1.01%  memeqbody
     0.56s  0.89% 75.44%      0.60s  0.95%  runtime.findObject
     0.52s  0.82% 76.27%      9.12s 14.42%  github.com/freddy33/qsm-go/m3space.(*Space).moveOldToOldMaps
     0.52s  0.82% 77.09%      0.85s  1.34%  runtime.stackpoolalloc
     0.47s  0.74% 77.83%      0.51s  0.81%  runtime.findnull
     0.46s  0.73% 78.56%      0.71s  1.12%  github.com/freddy33/qsm-go/m3space.(*ActiveNode).IsAlreadyConnected
     0.44s   0.7% 79.25%      0.44s   0.7%  runtime.(*mSpanList).remove
     0.39s  0.62% 79.87%      4.22s  6.67%  runtime.gfput
     0.37s  0.59% 80.46%      1.01s  1.60%  runtime.mapassign
     0.35s  0.55% 81.01%      5.08s  8.03%  github.com/freddy33/qsm-go/m3space.(*Connection).IsOld
     0.35s  0.55% 81.56%      3.19s  5.04%  runtime.mallocgc
     0.33s  0.52% 82.08%      4.15s  6.56%  github.com/freddy33/qsm-go/m3space.(*Space).GetNode
     0.30s  0.47% 82.56%      5.72s  9.04%  github.com/freddy33/qsm-go/m3space.(*Space).realizeAllOutgrowth
     0.28s  0.44% 83.00%      0.57s   0.9%  github.com/freddy33/qsm-go/m3space.(*Event).moveNewOutgrowthsToLatest
     0.26s  0.41% 83.41%      1.39s  2.20%  runtime.memhash_varlen
     0.25s   0.4% 83.81%      4.99s  7.89%  github.com/freddy33/qsm-go/m3space.(*NewPossibleOutgrowth).realize
     0.24s  0.38% 84.19%      0.63s     1%  sync.(*Mutex).Lock
     0.24s  0.38% 84.57%      0.93s  1.47%  sync.(*Pool).getSlow
     0.23s  0.36% 84.93%      0.35s  0.55%  runtime.mapiternext
     0.23s  0.36% 85.29%      1.13s  1.79%  runtime.memhash
     0.22s  0.35% 85.64%      0.37s  0.59%  github.com/freddy33/qsm-go/m3space.(*EventOutgrowth).AddFrom
     0.18s  0.28% 85.93%      1.44s  2.28%  github.com/freddy33/qsm-go/m3point.Point.getNextPointsFromMainAndVector
     0.14s  0.22% 86.15%      1.83s  2.89%  github.com/freddy33/qsm-go/m3space.(*Space).getOrCreateNode
     0.13s  0.21% 86.35%      0.82s  1.30%  github.com/freddy33/qsm-go/m3space.(*FullOutgrowthCollector).addNewEo
     0.13s  0.21% 86.56%      0.34s  0.54%  runtime.acquireSudog
     0.13s  0.21% 86.76%      0.64s  1.01%  runtime.greyobject
     0.13s  0.21% 86.97%      0.40s  0.63%  runtime.mapdelete
     0.12s  0.19% 87.16%      0.33s  0.52%  runtime.getStackMap
     0.11s  0.17% 87.33%      2.63s  4.16%  runtime.chanrecv
     0.11s  0.17% 87.51%      0.45s  0.71%  runtime.pcvalue
     0.10s  0.16% 87.67%      2.07s  3.27%  github.com/freddy33/qsm-go/m3space.(*OutgrowthCollectorStatSameEvent).realizeSameEvent
     0.09s  0.14% 87.81%      0.59s  0.93%  github.com/freddy33/qsm-go/m3point.(*GrowthContext).GetTrioIndex
     0.09s  0.14% 87.95%      1.44s  2.28%  github.com/freddy33/qsm-go/m3space.makeNewPossibleOutgrowth
     0.09s  0.14% 88.09%     11.06s 17.49%  runtime.copystack
     0.09s  0.14% 88.24%      4.91s  7.76%  runtime.findrunnable
     0.08s  0.13% 88.36%      4.53s  7.16%  runtime.unlock
     0.07s  0.11% 88.47%      0.92s  1.45%  runtime.gentraceback
     0.07s  0.11% 88.58%      2.95s  4.66%  runtime.gfget
     0.07s  0.11% 88.69%      1.12s  1.77%  runtime.growslice
     0.06s 0.095% 88.79%      0.39s  0.62%  runtime.adjustframe
     0.06s 0.095% 88.88%     25.70s 40.64%  runtime.lock
     0.06s 0.095% 88.98%      5.83s  9.22%  runtime.schedule
     0.05s 0.079% 89.06%      1.10s  1.74%  github.com/freddy33/qsm-go/m3space.(*Space).getAndActivateNode
     0.05s 0.079% 89.14%      0.59s  0.93%  github.com/freddy33/qsm-go/m3space.MakeActiveOutgrowth
     0.05s 0.079% 89.22%      9.04s 14.29%  runtime.chansend
     0.05s 0.079% 89.29%      0.37s  0.59%  runtime.ready
     0.05s 0.079% 89.37%      1.88s  2.97%  sync.(*Pool).Get
     0.04s 0.063% 89.44%      0.38s   0.6%  github.com/freddy33/qsm-go/m3space.(*ActiveNode).ConvertToSaved
     0.04s 0.063% 89.50%      0.87s  1.38%  github.com/freddy33/qsm-go/m3space.(*Space).makeConnection
     0.04s 0.063% 89.56%      0.56s  0.89%  runtime.gcAssistAlloc1
     0.04s 0.063% 89.63%      3.12s  4.93%  runtime.gcDrain
     0.04s 0.063% 89.69%      0.78s  1.23%  runtime.recv
     0.03s 0.047% 89.74%      0.41s  0.65%  github.com/freddy33/qsm-go/m3space.(*OutgrowthCollectorSameEvent).addNewEoFromSingle
     0.03s 0.047% 89.78%      3.61s  5.71%  github.com/freddy33/qsm-go/m3space.(*Space).processNewOutgrowth
     0.03s 0.047% 89.83%     11.52s 18.22%  runtime.mcall
     0.03s 0.047% 89.88%      4.04s  6.39%  runtime.newproc1
     0.03s 0.047% 89.93%      0.75s  1.19%  sync.(*Pool).Put
     0.02s 0.032% 89.96%      9.06s 14.33%  runtime.chansend1
     0.02s 0.032% 89.99%      0.53s  0.84%  runtime.isSystemGoroutine
     0.02s 0.032% 90.02%      0.59s  0.93%  runtime.newproc
     0.02s 0.032% 90.05%     11.26s 17.81%  runtime.newstack
     0.02s 0.032% 90.09%      7.98s 12.62%  runtime.stackalloc
     0.02s 0.032% 90.12%      8.30s 13.12%  runtime.stackcacherelease
     0.01s 0.016% 90.13%      2.12s  3.35%  github.com/freddy33/qsm-go/m3point.Point.GetNextPoints
     0.01s 0.016% 90.15%      0.63s     1%  github.com/freddy33/qsm-go/m3space.(*Event).createNewPossibleOutgrowths
     0.01s 0.016% 90.16%      0.38s   0.6%  runtime.goready.func1
     0.01s 0.016% 90.18%      9.55s 15.10%  runtime.morestack
     0.01s 0.016% 90.20%      1.82s  2.88%  runtime.newobject
     0.01s 0.016% 90.21%      7.96s 12.59%  runtime.stackcacherefill
     0.01s 0.016% 90.23%      8.31s 13.14%  runtime.stackfree
     0.01s 0.016% 90.24%      9.82s 15.53%  runtime.systemstack
         0     0% 90.24%      0.63s     1%  github.com/freddy33/qsm-go/m3point.(*GrowthContext).GetTrio
         0     0% 90.24%      2.94s  4.65%  github.com/freddy33/qsm-go/m3space.(*OutgrowthCollectorStatSingle).realizeSingle
         0     0% 90.24%     19.02s 30.08%  github.com/freddy33/qsm-go/m3space.(*Space).ForwardTime
         0     0% 90.24%      0.82s  1.30%  github.com/freddy33/qsm-go/m3space.BenchmarkPack1
         0     0% 90.24%      2.61s  4.13%  github.com/freddy33/qsm-go/m3space.BenchmarkPack12
         0     0% 90.24%      0.84s  1.33%  github.com/freddy33/qsm-go/m3space.BenchmarkPack2
         0     0% 90.24%     14.75s 23.32%  github.com/freddy33/qsm-go/m3space.BenchmarkPack20
         0     0% 90.24%     19.02s 30.08%  github.com/freddy33/qsm-go/m3space.benchSpaceTest
         0     0% 90.24%      0.63s     1%  github.com/freddy33/qsm-go/m3space.glob..func4
         0     0% 90.24%     19.02s 30.08%  github.com/freddy33/qsm-go/m3space.runSpaceTest
         0     0% 90.24%      0.45s  0.71%  runtime.(*gcWork).balance
         0     0% 90.24%      0.72s  1.14%  runtime.(*mcache).nextFree
         0     0% 90.24%      0.66s  1.04%  runtime.(*mcache).refill
         0     0% 90.24%      0.66s  1.04%  runtime.(*mcentral).cacheSpan
         0     0% 90.24%      0.38s   0.6%  runtime.(*mcentral).grow
         0     0% 90.24%      0.58s  0.92%  runtime.(*mheap).alloc.func1
         0     0% 90.24%      0.58s  0.92%  runtime.(*mheap).alloc_m
         0     0% 90.24%      0.41s  0.65%  runtime.chanrecv.func1
         0     0% 90.24%      2.63s  4.16%  runtime.chanrecv1
         0     0% 90.24%      0.51s  0.81%  runtime.funcname
         0     0% 90.24%      0.59s  0.93%  runtime.gcAssistAlloc
         0     0% 90.24%      0.56s  0.89%  runtime.gcAssistAlloc.func1
         0     0% 90.24%      3.20s  5.06%  runtime.gcBgMarkWorker
         0     0% 90.24%      3.12s  4.93%  runtime.gcBgMarkWorker.func2
         0     0% 90.24%      0.52s  0.82%  runtime.gcDrainN
         0     0% 90.24%      2.58s  4.08%  runtime.gfget.func1
         0     0% 90.24%      8.21s 12.98%  runtime.goexit0
         0     0% 90.24%      0.51s  0.81%  runtime.gostringnocopy
         0     0% 90.24%      0.44s   0.7%  runtime.handoff
         0     0% 90.24%      0.72s  1.14%  runtime.heapBits.initSpan
         0     0% 90.24%      0.59s  0.93%  runtime.largeAlloc
         0     0% 90.24%      0.59s  0.93%  runtime.mallocgc.func1
         0     0% 90.24%      4.79s  7.57%  runtime.mstart
         0     0% 90.24%      4.04s  6.39%  runtime.newproc.func1
         0     0% 90.24%      0.71s  1.12%  runtime.notesleep
         0     0% 90.24%      1.28s  2.02%  runtime.notewakeup
         0     0% 90.24%     23.67s 37.43%  runtime.osyield
         0     0% 90.24%      3.26s  5.15%  runtime.park_m
         0     0% 90.24%      1.07s  1.69%  runtime.parkunlock_c
         0     0% 90.24%      2.93s  4.63%  runtime.runqgrab
         0     0% 90.24%      2.93s  4.63%  runtime.runqsteal
         0     0% 90.24%      0.33s  0.52%  runtime.semacquire1
         0     0% 90.24%      2.68s  4.24%  runtime.semasleep
         0     0% 90.24%      5.73s  9.06%  runtime.semawakeup
         0     0% 90.24%      1.23s  1.94%  runtime.startm
         0     0% 90.24%      0.74s  1.17%  runtime.stopm
         0     0% 90.24%      1.22s  1.93%  runtime.wakep
         0     0% 90.24%      0.32s  0.51%  sync.runtime_SemacquireMutex
         0     0% 90.24%      1.50s  2.37%  testing.(*B).launch
         0     0% 90.24%     17.53s 27.72%  testing.(*B).run1.func1
         0     0% 90.24%     19.03s 30.09%  testing.(*B).runN

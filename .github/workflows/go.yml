name: QSM

on: [push]

env:
  GOPROXY: https://fredsimon.jfrog.io/fredsimon/api/go/go

jobs:
  qsm:
    name: Test
    runs-on: ubuntu-latest
    container: fredsimon-docker.jfrog.io/golang:1.14
    services:
      postgres:
        image: fredsimon-docker.jfrog.io/postgres:12.3
        env:
          POSTGRES_DB: qsm
          POSTGRES_USER: qsm
          POSTGRES_PASSWORD: qsm
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    defaults:
      run:
        working-directory: backend
    env:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: qsm
      DB_PASSWORD: qsm
      DB_NAME: qsm
      SERVER_PORT: 8063
      BACKEND_ROOT_URL: "https://qsmgo-92a1656-5f154.eu1.kinto.io/"

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Cache Go modules
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Get dependencies
        run: go mod download

      - name: Build backend
        run: go build -v .

      - name: Test backend packages
        run: go test -v ./m3db ./pointdb ./pathdb ./m3server

# TODO: Make sure to update kinto before running this
#      - name: Test client with Kinto
#        run: go test -v ./clpoint ./clpath
#        working-directory: client
